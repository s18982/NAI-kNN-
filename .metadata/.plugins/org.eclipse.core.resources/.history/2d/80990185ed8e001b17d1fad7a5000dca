package NAI01;

import java.util.ArrayList;
import java.util.HashMap;

public class KNN {
	ArrayList<Pomiar> pomiary;
	double x1,x2,x3,x4;
	int k;
	
	public KNN(ArrayList<Pomiar> pomiary, double[] tab, int x) {
		this.pomiary = pomiary;
		this.x1 = tab[0];
		this.x2 = tab[1];
		this.x3 = tab[2];
		this.x4 = tab[3];
		this.k = x;
	}
	
	public String jakiGatunek() {
		HashMap<Pomiar, Double> hm = new HashMap<>();
		
		for(Pomiar p:pomiary) {
			double x = p.obliczOdlegloscKwadrat(x1,x2, x3, x4);
			hm.put(p, x);
		}
		
		Pomiar min = pomiary.get(0);
		
		double minDoubles[] = new double[k];
		Pomiar[] minPoms = new Pomiar[k];
		

		for(int j = 0;j<k; j++) {
			min = pomiary.get(0);
		for(int i = 1;i<pomiary.size();i++) {
			double op = hm.get(pomiary.get(i));
			double minX = hm.get(min);
			if(op<minX) {
				min = pomiary.get(i);
			}
		}
		minDoubles[j] = hm.get(min);
		minPoms[j] = min;
		
		hm.remove(min);
		pomiary.remove(min);
		
		}
		
		// Z powrotem dodaje do listy i hashmapy wyrzucone na moment elementy
				for(int i = 0; i<k; i++) {
					pomiary.add(minPoms[i]);
					hm.put(minPoms[i], minDoubles[i]);
				}
								
				// Okreslenie gatunku
				
				int counterSetosa = 0;
				int counterVersicolor = 0;
				int counterVirginica = 0;
				
				
				for (int i = 0; i<minPoms.length; i++) {
					switch(minPoms[i].getGatunek()) {
						case "Iris-setosa":
							counterSetosa++;
							break;
						case "Iris-versicolor":
							counterVersicolor++;
							break;
						case "Iris-virginica":
							counterVirginica++;
							break;
					
					}
				}
						
				if(counterSetosa>counterVersicolor && counterSetosa>counterVirginica) {
					//System.out.println("Iris-setosa");
					return "Iris-setosa";
				}else
					if(counterVersicolor>counterSetosa && counterVersicolor>counterVirginica){
						//System.out.println("Iris-versicolor");
						return "Iris-versicolor";
					}else
						if(counterVirginica>counterSetosa && counterVersicolor<counterVirginica){
							//System.out.println("Iris-virginica");
							return "Iris-virginica";
						}else
							//System.out.println("Nie mo¿na okreœliæ gatunku");
							return "Nie mo¿na okreslic gatunku";
	}
}
